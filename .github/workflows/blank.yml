# This is a basic workflow to help you get started with Actions

name: Terraform GithubAction Demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      ARM_SUBSCRIPTION_ID: 'd518f0d3-5418-4feb-a3b4-aeb82c7a74f4'
      ARM_TENANT_ID: '562f06d0-b752-4448-88aa-a447d5b34f5c'
      ARM_CLIENT_ID: 'e528d0de-9d0d-4107-b214-9a4d1f26210a'
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      AZURE_STORAGE: 'terraform0717'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secret.AZURE_CREDENTIALS }}

      # Runs a single command using the runners shell
      - name: Build Terraform State
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE }}
        
      - name: HashiCorp - Setup Terraform        
        uses: hashicorp/setup-terraform@v1.2.1
        
      - name: Terraform init
        run: terraform init -backend-config="storage_account_name=${{ env.AZURE_STORAGE }}" 
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        run: terraform apply tfplan
        

      
